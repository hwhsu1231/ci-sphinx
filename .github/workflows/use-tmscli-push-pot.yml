# Distributed under the OSI-approved BSD 3-Clause License.
# See accompanying file LICENSE.txt for details.

name: use-tmscli-push-pot

on:
  workflow_call:
    inputs:
      RUNNER:
        type: string
        required: true
      CHECKOUT:
        type: string
        required: true
      VERSION:
        type: string
        required: true
      ENABLE_JOB:
        type: boolean
        required: true
      ACTOR_NAME:
        type: string
        required: true
      ACTOR_EMAIL:
        type: string
        required: true
    secrets:
      CROWDIN_PERSONAL_TOKEN:
        required: true

jobs:
  tmscli-push-pot:
    if: ${{ inputs.ENABLE_JOB }}
    runs-on: ${{ inputs.RUNNER }}
    steps:
      - name: Print Contexts/Inputs/Secrets
        shell: bash
        run: |
          echo "[Contexts]"
          echo "github.job = ${{ github.job }}"
          echo "github.ref = ${{ github.ref }}"
          echo "github.ref_name = ${{ github.ref_name }}"
          echo "github.event_name = ${{ github.event_name }}"
          echo "github.event.action = ${{ github.event.action }}"
          echo "github.event.number = ${{ github.event.number }}"
          echo "github.workflow = ${{ github.workflow }}"
          echo "github.workflow_ref = ${{ github.workflow_ref }}"
          echo "github.run_id = ${{ github.run_id }}"
          echo "github.run_number = ${{ github.run_number }}"
          echo "github.run_attempt = ${{ github.run_attempt }}"
          echo "github.server_url = ${{ github.server_url }}"
          echo "github.repository = ${{ github.repository }}"
          echo "github.workspace = ${{ github.workspace }}"
          echo "[Inputs]"
          echo "inputs.RUNNER = ${{ inputs.RUNNER }}"
          echo "inputs.CHECKOUT = ${{ inputs.CHECKOUT }}"
          echo "inputs.VERSION = ${{ inputs.VERSION }}"
          echo "inputs.ENABLE_JOB = ${{ inputs.ENABLE_JOB }}"
          echo "inputs.ACTOR_NAME = ${{ inputs.ACTOR_NAME }}"
          echo "inputs.ACTOR_EMAIL = ${{ inputs.ACTOR_EMAIL }}"
          echo "[Secrets]"
          echo "secrets.CROWDIN_PERSONAL_TOKEN = ${{ secrets.CROWDIN_PERSONAL_TOKEN }}"

      - name: Checkout to '${{ inputs.CHECKOUT }}'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.CHECKOUT }}
          submodules: true

      # - name: Set up Environment Variables
      #   shell: bash
      #   run: |
      #     echo "CROWDIN_PERSONAL_TOKEN=${{ secrets.CROWDIN_PERSONAL_TOKEN }}" >> ${GITHUB_ENV}

      # - name: Check whether '${{ inputs.VERSION }}' version should be uploaded to Crowdin
      #   shell: bash
      #   run: |
      #     VERSION="${{ inputs.VERSION }}"
      #     FILTER=".v3 | map(select(.VERSION_COMPENDIUM == \"\")) | .[].VERSION"
      #     OUTPUT=$(jq -r "${FILTER}" versions.json)
      #     readarray -t CROWDIN_BRANCHES <<< "$OUTPUT"
      #     VERSION_FOUND=false
      #     for CROWDIN_BRANCH in "${CROWDIN_BRANCHES[@]}"; do
      #       if [[ "${VERSION}" == "$CROWDIN_BRANCH" ]]; then
      #         VERSION_FOUND=true
      #         break
      #       fi
      #     done
      #     echo "VERSION_FOUND: $VERSION_FOUND"
      #     if [[ $VERSION_FOUND == "true" ]]; then
      #       echo "'${{ inputs.VERSION }}' version should be uploaded to Crowdin."
      #     else
      #       echo "'${{ inputs.VERSION }}' version should NOT be uploaded to Crowdin."
      #       exit 1
      #     fi

      - name: Install CMake
        uses: hwhsu1231/ci-sphinx/.github/actions/install-cmake@main

      - name: Install Gettext
        uses: hwhsu1231/ci-sphinx/.github/actions/install-gettext@main

      - name: Install Crowdin
        uses: hwhsu1231/ci-sphinx/.github/actions/install-crowdin@main

      - name: Get Other Caches from versions.json
        id: gocv
        uses: hwhsu1231/ci-sphinx/.github/actions/get-other-caches-from-versions-file@main
        with:
          version: ${{ inputs.VERSION }}

      - name: Configure the 'all' preset for the '${{ inputs.VERSION }}' version
        uses: hwhsu1231/ci-sphinx/.github/actions/cmake-configure-preset@main
        with:
          source-directory: ${{ github.workspace }}
          preset: 'all'
          cache-version: ${{ inputs.VERSION }}
          cache-auto-depend: 'OFF'
          cache-version-compendium: ${{ steps.gocv.outputs.VERSION_COMPENDIUM }}
          cache-version-of-python: ${{ steps.gocv.outputs.VERSION_OF_PYTHON }}
          cache-version-of-sphinx: ${{ steps.gocv.outputs.VERSION_OF_SPHINX }}
          cache-version-of-doxygen: ${{ steps.gocv.outputs.VERSION_OF_DOXYGEN }}
          cache-version-of-proj: ${{ steps.gocv.outputs.VERSION_OF_PROJ }}

      - name: Build the 'tmscli_push_pot' target
        uses: hwhsu1231/ci-sphinx/.github/actions/cmake-build-target@main
        with:
          source-directory: ${{ github.workspace }}
          preset: 'all'
          target: 'tmscli_push_pot'
        env:
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}
